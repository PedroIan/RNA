allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.02, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='x_1', ylab='x_2')
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.02, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,0.3), xlab='x_1', ylab='x_2')
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.02, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,0.03), xlab='x_1', ylab='x_2')
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.02, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='x_1', ylab='x_2')
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.02, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='x_1', ylab='x_2')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.001, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='x_1', ylab='x_2')
var(allErros)
View(yhat)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
s1 <- 0.4
s2 <- 0.4
nc <- 200
xc1 <- matrix(rnorm(nc * 2), ncol = 2) * s1 + t(matrix((c(2, 2)), ncol = nc, nrow = 2))
xc2 <- matrix(rnorm(nc * 2), ncol = 2) * s2 + t(matrix((c(4, 4)), ncol = nc, nrow = 2))
plot(xc1[,1], xc1[,2], col = 'red', xlim = c(0, 6), ylim = c(0, 6), xlab = 'x_1', ylab = 'x_2')
par(new = T)
plot(xc2[,1], xc2[,2], col = 'blue', xlim = c(0, 6), ylim = c(0, 6), xlab = '', ylab = '')
x1_reta <- seq(6/100, 6, 6/100)
x2_reta <- -x1_reta + 6
par(new = T)
plot(x1_reta, x2_reta, type = 'l', col = 'orange', xlim = c(0, 6), ylim = c(0, 6), xlab ='', ylab = '')
y1 <- matrix(0, nrow=nc)
y2 <- matrix(1, nrow=nc)
concatenatedX <- rbind(xc1, xc2)
concatenatedY <- rbind(y1, y2)
retlist <- trainperceptron(concatenatedX, concatenatedY, 0.02, 0.02, 100, 1)
w <- retlist[[1]]
erro <- retlist[[2]]
seqi<-seq(0,6,0.1)
seqj<-seq(0,6,0.1)
M <- matrix(0,nrow=length(seqi),ncol=length(seqj))
ci<-0
for (i in seqi) {
ci<- ci+1
cj<-0
for (j in seqj){
cj<- cj+1
x<- c(i,j)
M[ci,cj]<-yperceptron(x,w,1)
}
}
plot(xc1[,1],xc1[,2],col = 'red', xlim = c(0,6), ylim = c(0,6), xlab='x_1', ylab='x_2')
par(new=T)
plot(xc2[,1], xc2[,2], col ='blue', xlim = c(0,6), ylim = c(0,6), xlab='', ylab='')
par(new=T)
contour(seqi, seqj, M, xlim = c(0,6), ylim = c(0,6), xlab='', ylab='')
persp3D(seqi, seqj, M, counter=T, theta = 55, phi = 30, r = 40, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180, shade = 0.4, ticktype = 'detailed', nticks=5)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='x_1', ylab='x_2')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='Erro %', ylab='Iteração')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='Erro %', ylab='Iteração')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='Erro %', ylab='Iteração')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='Erro %', ylab='Iteração')
var(allErros)
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
data("iris")
y1 <- matrix(0, nrow=50)
y2 <- matrix(1, nrow=100)
yAll <- rbind(y1,y2)
allButSpecies <- rbind(iris[,1],iris[,2],iris[,3],iris[,4], yAll[,1])
allButSpecies <- t(allButSpecies)
nc <- length(allButSpecies[,1])
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
allErros <- matrix(0, nrow=100)
for (j in 1:101){
allTeste <- allButSpecies[sample(nc, nc*0.3, replace=FALSE),]
allTreinamento <- allButSpecies[sample(nc, nc*0.7, replace=FALSE),]
retlist <- trainperceptron(allTreinamento[,1:4], allTreinamento[,5], 0.02, 0.01, 100, 1)
w <- retlist[[1]]
yhat <- matrix(0, nrow=length(allTeste[,1]))
countErrados <- 0
tamanhoTestes <- length(allTeste[,1])
for (i in 1:tamanhoTestes) {
x<- allTeste[i,1:4]
yhat[i]<-yperceptron(x,w,1)
if(yhat[i] != allTeste[i,5]) {
countErrados <- countErrados + 1
}
}
erroPercentual <- countErrados / tamanhoTestes
allErros[j] <- erroPercentual * 100
confusionMatrix(yhat, allTeste[i,5])
}
plot(1:101,allErros,col = 'red', xlim = c(0,101), ylim = c(0,3), xlab='Erro %', ylab='Iteração')
var(allErros)
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/mine.R')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/mine.R')
View(w)
())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
s1 <- 0.4
s2 <- 0.4
nc <- 200
xc1 <- matrix(rnorm(nc * 2), ncol = 2) * s1 + t(matrix((c(2, 2)), ncol = nc, nrow = 2))
xc2 <- matrix(rnorm(nc * 2), ncol = 2) * s2 + t(matrix((c(4, 4)), ncol = nc, nrow = 2))
plot(xc1[,1], xc1[,2], col = 'red', xlim = c(0, 6), ylim = c(0, 6), xlab = 'x_1', ylab = 'x_2')
par(new = T)
plot(xc2[,1], xc2[,2], col = 'blue', xlim = c(0, 6), ylim = c(0, 6), xlab = '', ylab = '')
x1_reta <- seq(6/100, 6, 6/100)
x2_reta <- -x1_reta + 6
par(new = T)
plot(x1_reta, x2_reta, type = 'l', col = 'orange', xlim = c(0, 6), ylim = c(0, 6), xlab ='', ylab = '')
rm(list = ls())
library('plot3D')
source('trainperceptron.R')
source('yperceptron.R')
s1 <- 0.4
s2 <- 0.4
nc <- 200
xc1 <- matrix(rnorm(nc * 2), ncol = 2) * s1 + t(matrix((c(2, 2)), ncol = nc, nrow = 2))
xc2 <- matrix(rnorm(nc * 2), ncol = 2) * s2 + t(matrix((c(4, 4)), ncol = nc, nrow = 2))
plot(xc1[,1], xc1[,2], col = 'red', xlim = c(0, 6), ylim = c(0, 6), xlab = 'x_1', ylab = 'x_2')
par(new = T)
plot(xc2[,1], xc2[,2], col = 'blue', xlim = c(0, 6), ylim = c(0, 6), xlab = '', ylab = '')
x1_reta <- seq(6/100, 6, 6/100)
x2_reta <- -x1_reta + 6
par(new = T)
plot(x1_reta, x2_reta, type = 'l', col = 'orange', xlim = c(0, 6), ylim = c(0, 6), xlab ='', ylab = '')
y1 <- matrix(0, nrow=nc)
y2 <- matrix(1, nrow=nc)
concatenatedX <- rbind(xc1, xc2)
concatenatedY <- rbind(y1, y2)
retlist <- trainperceptron(concatenatedX, concatenatedY, 0.02, 0.02, 100, 1)
w <- retlist[[1]]
erro <- retlist[[2]]
seqi<-seq(0,6,0.1)
seqj<-seq(0,6,0.1)
M <- matrix(0,nrow=length(seqi),ncol=length(seqj))
ci<-0
for (i in seqi) {
ci<- ci+1
cj<-0
for (j in seqj){
cj<- cj+1
x<- c(i,j)
M[ci,cj]<-yperceptron(x,w,1)
}
}
plot(xc1[,1],xc1[,2],col = 'red', xlim = c(0,6), ylim = c(0,6), xlab='x_1', ylab='x_2')
par(new=T)
plot(xc2[,1], xc2[,2], col ='blue', xlim = c(0,6), ylim = c(0,6), xlab='', ylab='')
par(new=T)
contour(seqi, seqj, M, xlim = c(0,6), ylim = c(0,6), xlab='', ylab='')
persp3D(seqi, seqj, M, counter=T, theta = 55, phi = 30, r = 40, d = 0.1, expand = 0.5, ltheta = 90, lphi = 180, shade = 0.4, ticktype = 'detailed', nticks=5)
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao2.R')
sum(yhat)
View(w)
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
View(w)
source('D:/Users/pedro/Documents/GitHub/RNA/Exercicio4/questao3.R', encoding = 'UTF-8')
sum(yhat)
View(allTreinamento)
